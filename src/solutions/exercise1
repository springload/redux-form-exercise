====================
/containers/IntelligentExerciseOneForm.js
====================
import { connect } from 'react-redux';
import { reduxForm } from 'redux-form';
import ExerciseOneForm from '../components/ExerciseOneForm';
import * as actions from '../actions';

const formName = 'numberToFrench';

const validate = (values) => {
    const errors = {};

    if (values.number === '') {
        errors.number = 'Required';
    } else if (values.number < 1 || values.number > 3) {
        errors.number = 'Number must be between 1 and 3 (included)';
    }

    return errors;
};

const mapStateToProps = (state) => {
    return {
        initialValues: state.exercise1.initialFormValues,
        frenchNumber: state.exercise1.frenchNumber,
        numberSubmitted: state.exercise1.numberSubmitted,
    };
};

const mapDispatchToProps = (dispatch) => {
    return {
        onSubmit: (submit) => { // Has to be named onSubmit here and will be given to Form as handleSubmit property
            dispatch(actions.exerciseOneFormSubmit(submit));
        },
    };
};

const IntelligentExerciseOneForm = reduxForm({
    form: formName,
    validate,
})(ExerciseOneForm);

export default connect(
    mapStateToProps,
    mapDispatchToProps,
)(IntelligentExerciseOneForm);



====================
/components/ExerciseOneForm.js
====================
import React, { PropTypes } from 'react';
import { Field } from 'redux-form';
import InputField from './Form/InputField';

const propTypes = {
    handleSubmit: PropTypes.func.isRequired,
    submitSucceeded: PropTypes.bool.isRequired,
    numberSubmitted: PropTypes.string,
    frenchNumber: PropTypes.string,
};

const defaultProps = {
    frenchNumber: '',
    numberSubmitted: '',
};

const ExerciseOneForm = ({ handleSubmit, submitSucceeded, numberSubmitted, frenchNumber }) => (
    <div>
        <div>
            <h3>Exercise 1</h3>
            <p>
                I need to be a form that takes an input (using InputField component) of type
                number and translates this number into french.<br />
                Please make sure the number is not empty and between 1 and 3 (included).
            </p>
            <p>
                Result must be displayed as "[numberSubmitted] is '[frenchNumber]' in French."<br />
                Example: 2 is 'deux' in French.
            </p>
            <p>
                TODO: Implement me in /components/ExerciseOneForm.js &amp; /containers/IntelligentExerciseOneForm.js
            </p>
        </div>
        <form onSubmit={handleSubmit}>
            <fieldset>
                <legend>Exercise 1</legend>
                <div>
                    <Field
                        name="number"
                        component={InputField}
                        type="number"
                        label="What number do you want to translate?"
                    />
                </div>
                <button type="submit">Submit</button>
            </fieldset>
        </form>
        {submitSucceeded && (
            <div style={{ marginLeft: '10px', marginTop: '10px', color: 'green' }}>
                {numberSubmitted} is '{frenchNumber}' in French.
            </div>
        )}
    </div>
);

ExerciseOneForm.propTypes = propTypes;
ExerciseOneForm.defaultProps = defaultProps;

export default ExerciseOneForm;

// NOTE THAT AN INPUT OF TYPE NUMBER IS STORED IN THE STATE AS A STRING ;)